{"version":3,"sources":["component/Loading.js","component/Tour.js","component/Tours.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","Tour","id","image","info","name","price","removeTour","useState","readMore","setReadMore","src","alt","substring","onClick","Tours","tours","map","tour","App","loading","setLoading","setTours","fetchTours","a","fetch","response","json","console","log","useEffect","length","newTour","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAYeA,EAVC,WACZ,OACI,qBAAKC,UAAU,UAAf,SACI,+C,OCqBGC,EAxBF,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,GAAIC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACzC,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,OACI,0BAASV,UAAU,cAAnB,UACI,qBAAKW,IAAKR,EAAOS,IAAKP,IACtB,iCACI,sBAAKL,UAAU,YAAf,UACI,6BAAKK,IACL,qBAAIL,UAAU,aAAd,cAA6BM,KAC7B,8BAEQG,EAAWL,EAAH,UAAaA,EAAKS,UAAU,EAAE,KAA9B,QAEZ,wBAAQC,QAAS,kBAAMJ,GAAaD,IAApC,SACKA,EAAW,YAAc,iBAGlC,wBAAQT,UAAU,aAAac,QAAS,kBAAMP,EAAWL,IAAzD,qCCELa,EAlBD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOT,EAAgB,EAAhBA,WACnB,OACI,oCACI,sBAAKP,UAAU,QAAf,UACI,4CACA,qBAAKA,UAAU,iBAEnB,8BAEQgB,EAAMC,KAAI,SAACC,GACP,OAAO,cAAC,EAAD,2BAAwBA,GAAxB,IAA8BX,WAAYA,IAA/BW,EAAKhB,aCiDhCiB,MAtDf,WACE,MAA8BX,oBAAS,GAAvC,mBAAOY,EAAP,KAAgBC,EAAhB,KACA,EAA0Bb,mBAAS,IAAnC,mBAAOQ,EAAP,KAAcM,EAAd,KAOMC,EAAU,uCAAG,8BAAAC,EAAA,6DACjBH,GAAW,GADM,kBAGQI,MAdjB,sCAWS,cAGTC,EAHS,gBAIKA,EAASC,OAJd,OAITX,EAJS,OAKfK,GAAW,GACXC,EAASN,GANM,kDAQfK,GAAW,GACXO,QAAQC,IAAR,MATe,0DAAH,qDAiBhB,OAJAC,qBAAU,WACRP,MACC,IAEAH,EAEA,+BACC,cAAC,EAAD,MAKgB,IAAjBJ,EAAMe,OAEL,+BACE,sBAAK/B,UAAU,QAAf,UACE,+CACA,wBAAQA,UAAU,MAAMc,QAAS,kBAAMS,KAAvC,0BASN,+BACE,cAAC,EAAD,CAAOP,MAAOA,EAAOT,WA7CN,SAACL,GAClB,IAAM8B,EAAUhB,EAAMiB,QAAO,SAACf,GAAD,OAAUA,EAAKhB,KAAOA,KACnDoB,EAASU,SCFEE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d279baf7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loading = () => {\n    return (\n        <div className=\"loading\">\n            <h1>\n                Loading...\n            </h1>\n        </div>\n    )\n}\n\nexport default Loading;","import React, {useState} from \"react\";\n\nconst Tour = ({id, image, info, name, price, removeTour}) => {\n    const [readMore, setReadMore] = useState(false);\n    return (\n        <article className=\"single-tour\">\n            <img src={image} alt={name} />\n            <footer>\n                <div className=\"tour-info\">\n                    <h4>{name}</h4>\n                    <h4 className=\"tour-price\">${price}</h4>\n                    <p>\n                        {\n                            readMore ? info : `${info.substring(0,200)} ...`\n                        }\n                        <button onClick={() => setReadMore(!readMore)}>\n                            {readMore ? 'show less' : 'read more'}\n                        </button>\n                    </p>\n                    <button className=\"delete-btn\" onClick={() => removeTour(id)}>not interested</button>\n                </div>\n            </footer>\n        </article>\n    )\n}\n\nexport default Tour;","import React from \"react\";\nimport Tour from './Tour';\n\nconst Tours = ({tours, removeTour}) => {\n    return (\n        <section>\n            <div className=\"title\">\n                <h2>ours tours</h2>\n                <div className=\"underline\"></div>\n            </div>\n            <div>\n                {\n                    tours.map((tour) => {\n                        return <Tour key={tour.id} {...tour} removeTour={removeTour} />\n                    })\n                }\n            </div>\n        </section>\n    )\n}\n\nexport default Tours;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport './component/Loading';\nimport Tours from './component/Tours';\nimport Loading from './component/Loading';\n\nconst url = 'https://retoolapi.dev/FwxjFt/tours';\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [tours, setTours] = useState([]);\n\n  const removeTour = (id) => {\n    const newTour = tours.filter((tour) => tour.id !== id)\n    setTours(newTour)\n  }\n\n  const fetchTours = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(url)\n      const tours = await response.json()\n      setLoading(false)\n      setTours(tours)\n    } catch(error) {\n      setLoading(false);\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchTours()\n  }, [])\n\n  if(loading) {\n    return (\n     <main>\n      <Loading/>\n     </main>\n    )\n  }\n\n  if(tours.length === 0) {\n    return (\n      <main>\n        <div className=\"title\">\n          <h2>no tours left</h2>\n          <button className=\"btn\" onClick={() => fetchTours()}>\n            refresh\n          </button>\n        </div>\n      </main>\n    )\n  }\n\n  return (\n    <main>\n      <Tours tours={tours} removeTour={removeTour}/>\n    </main>    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}